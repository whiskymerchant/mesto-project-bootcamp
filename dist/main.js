(()=>{"use strict";var __webpack_modules__={734:()=>{eval("\n;// CONCATENATED MODULE: ./src/components/api.js\nvar config = {\n  url: 'https://mesto.nomoreparties.co',\n  cohort: \"wbf-cohort-5\",\n  headers: {\n    'content-type': 'application/json',\n    'authorization': 'e428d967-ad54-4ed1-8f27-1e899a8fcfdd'\n  }\n};\nfunction dressResponse(res) {\n  return res.ok ? res.json() : res.json().then(function (data) {\n    return Promise.reject(data);\n  });\n}\nfunction getUserData() {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/users/me\"), {\n    method: \"GET\",\n    headers: config.headers\n  }).then(dressResponse);\n}\nfunction getAllCards() {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/cards\"), {\n    method: \"GET\",\n    headers: config.headers\n  }).then(dressResponse);\n}\nfunction profileInfoLoad(body) {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/users/me\"), {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(dressResponse);\n}\nfunction loadNewCard(body) {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/cards\"), {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(dressResponse);\n}\nfunction editUserIcon(avatar) {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/users/me/avatar\"), {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatar\n    })\n  }).then(dressResponse);\n}\nfunction deleteCard(cardId) {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/cards/\").concat(cardId), {\n    method: \"DELETE\",\n    headers: config.headers\n  }).then(dressResponse);\n}\nfunction updateLike(cardId, liked) {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/cards/likes/\").concat(cardId), {\n    method: liked ? \"DELETE\" : \"PUT\",\n    headers: config.headers\n  }).then(dressResponse);\n}\n\n// loadNewCard({\n//   name: \"Anton Plekhov\",\n//   link: \"https://pictures-of-cats.org/wp-content/uploads/2021/11/Spooky-Sphynx-in-womans-clothes-and-wig1_edited.jpg\"\n// })\n\n// profileInfoLoad({\n//   name: 'Marie Skłodowska Curie',\n//   about: 'Physicist and Chemist'\n// })\n\n\n;// CONCATENATED MODULE: ./src/components/consts.js\nvar initialCards = [{\n  name: 'Архыз',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg'\n}, {\n  name: 'Челябинская область',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg'\n}, {\n  name: 'Иваново',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg'\n}, {\n  name: 'Камчатка',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg'\n}, {\n  name: 'Холмогорский район',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg'\n}, {\n  name: 'Байкал',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg'\n}];\nvar profileName = document.querySelector('.profile__info_header');\nvar profileDescriptor = document.querySelector('.profile__info_description');\nvar profileAvatar = document.querySelector('.profile__avatar-image');\nvar formEdit = document.querySelector('#popup-edit');\nvar formAdd = document.querySelector('#popup-add');\nvar formAvatar = document.querySelector('#popup-avatar');\nvar popupAny = document.querySelector('.popup');\nvar popupList = document.querySelectorAll('.popup');\nvar buttonEditSubmit = formEdit.querySelector('.form__save-button');\nvar buttonAddSubmit = formAdd.querySelector('.form__save-button');\nvar nameInput = formEdit.querySelector('.form__profile_name');\nvar jobInput = formEdit.querySelector('.form__profile_motto');\nvar placeInput = formAdd.querySelector('[name=\"place-name\"]');\nvar linkInput = formAdd.querySelector('.form-link');\nvar buttonProfileInfoEdit = document.querySelector('.profile__info_edit-button');\nvar formEditCloseButton = formEdit.querySelector('.form__close-icon');\nvar addCardButton = document.querySelector('.profile__add-button');\nvar addCardCloseButton = formAdd.querySelector('.form__close-icon');\nvar cardTemplate = document.querySelector('#card-template');\nvar cardsContainer = document.querySelector('.elements');\nvar allPage = document.querySelector('.page');\nvar cardPopup = document.querySelector('.popup__big-pic-template');\nvar configSelector = {\n  formSelector: '.form',\n  inputSelector: '.form__item',\n  submitButtonSelector: '.form__save-button',\n  inactiveButtonClass: 'form__button-blocked',\n  inputErrorClass: 'form__input-invalid'\n};\n\n;// CONCATENATED MODULE: ./src/components/card.js\n\n\n\n\n\nfunction createCard(object, userId) {\n  console.log(isLiked);\n  var clonedCard = cardTemplate.content.querySelector('.element__rectangle').cloneNode(true);\n  var pictureElement = clonedCard.querySelector('.element__image');\n  clonedCard.querySelector('.element__rectangle_text').textContent = object.name;\n  clonedCard.querySelector('.element__rectangle_like').textContent = object.likes.length;\n  pictureElement.src = object.link;\n  cardsContainer.prepend(clonedCard);\n  var deleteBin = clonedCard.querySelector('.element__delete-button');\n  var likeHeart = clonedCard.querySelector('.element__rectangle_heart');\n  pictureElement.addEventListener('click', runImagePopup);\n  if (isLiked(object.likes, userId)) {\n    toggleLike(likeHeart);\n  }\n  if (object.owner._id !== userId) {\n    deleteBin.remove();\n  }\n  deleteBin.addEventListener('click', function () {\n    deleteCard(object._id).then(function () {\n      clonedCard.remove();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  });\n  likeHeart.addEventListener('click', handleClickLike);\n  function handleClickLike() {\n    updateLike(object._id, isLiked(object.likes, userId)).then(function (data) {\n      likeHeart.classList.toggle('element__rectangle_heart-on');\n      object.likes = data.likes;\n      console.log(data);\n      clonedCard.querySelector('.element__rectangle_like').textContent = object.likes.length;\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }\n  return clonedCard;\n}\n;\n\n;// CONCATENATED MODULE: ./src/components/validate.js\n\n\n\nfunction addError(inputElement, errorElement, config) {\n  inputElement.classList.add(config.inputErrorClass);\n  errorElement.textContent = inputElement.validationMessage;\n}\nfunction hideError(inputElement, errorElement, config) {\n  inputElement.classList.remove(config.inputErrorClass);\n  errorElement.textContent = '';\n}\nfunction toggleButtonState(buttonElement, isActive, config) {\n  if (isActive) {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(config.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(config.inactiveButtonClass);\n  }\n}\nfunction checkInputValidity(inputElement, formElement, config) {\n  var isInputValid = inputElement.validity.valid;\n  var errorElement = formElement.querySelector(\"#\".concat(inputElement.name, \"-error\"));\n  if (!isInputValid) {\n    addError(inputElement, errorElement, config);\n  } else {\n    hideError(inputElement, errorElement, config);\n  }\n}\nfunction enableValidation(config) {\n  var forms = document.querySelectorAll(config.formSelector);\n  Array.from(forms).forEach(function (formElement) {\n    setEventListener(formElement, config);\n  });\n}\nfunction setEventListener(formElement, config) {\n  var inputList = formElement.querySelectorAll(config.inputSelector);\n  var submitButtonElement = formElement.querySelector(config.submitButtonSelector);\n  toggleButtonState(submitButtonElement, formElement.checkValidity(), config);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      toggleButtonState(submitButtonElement, formElement.checkValidity(), config);\n      checkInputValidity(inputElement, formElement, config);\n    });\n  });\n}\n\n;// CONCATENATED MODULE: ./src/components/modal.js\n\n\n\nfunction runImagePopup(e) {\n  openPopup(cardPopup);\n  var targetCard = e.target.closest('.element__rectangle');\n  var chosenImage = targetCard.querySelector('.element__image');\n  var chosenText = targetCard.querySelector('.element__rectangle_text');\n  cardPopup.querySelector('.popup__big-picture').src = chosenImage.src;\n  cardPopup.querySelector('.popup__big-popup-descriptor').textContent = chosenText.textContent;\n}\nfunction openPopup(modalElement) {\n  modalElement.classList.add('popup_opened');\n  document.addEventListener('keydown', closeByEsc);\n}\nfunction closePopup(modalElement) {\n  modalElement.classList.remove('popup_opened');\n}\n;\nfunction closeByEsc(evt) {\n  if (evt.key === 'Escape') {\n    var openedPopup = document.querySelector('.popup_opened');\n    closePopup(openedPopup);\n  }\n}\n;\n\n;// CONCATENATED MODULE: ./src/components/util.js\n\n\n\n\n\nfunction setButtonText(_ref) {\n  var button = _ref.button,\n    text = _ref.text,\n    disabled = _ref.disabled;\n  if (disabled) {\n    button.disabled = false;\n  } else {\n    button.disabled = 'form__button-blocked';\n  }\n  button.textContent = text;\n}\n;\nfunction toggleLike(modalElement) {\n  modalElement.classList.toggle('element__rectangle_heart-on');\n}\n;\nfunction isLiked(likes, userID) {\n  return likes.some(function (user) {\n    return user._id === userID;\n  });\n}\n\n;// CONCATENATED MODULE: ./src/components/script.js\n\n\n\n\n\n\n\nvar userId = null;\nfunction addCardManually(e) {\n  e.preventDefault();\n  var manualCard = {\n    name: \"\",\n    link: \"\"\n  };\n  manualCard.name = formAdd.querySelector('.form__profile_name').value;\n  manualCard.link = formAdd.querySelector('.form__profile_motto').value;\n  console.log(manualCard);\n  loadNewCard(manualCard).then(function (data) {\n    console.log(data);\n    createCard(data, userId);\n  }).catch(function (error) {\n    console.log(\"Cant load card \".concat(error));\n  });\n  closePopup(formAdd);\n}\nfunction addAvatar(e) {\n  e.preventDefault();\n  var newAvatar = null;\n  newAvatar = formAvatar.querySelector('.form__profile_motto').value;\n  editUserIcon(newAvatar).then(function () {\n    getUserData().then(function (data) {\n      profileAvatar.src = data.avatar;\n    });\n  });\n  closePopup(formAvatar);\n  formAvatar.querySelector('.form__profile_motto').value = \"\";\n}\nbuttonProfileInfoEdit.addEventListener('click', function () {\n  nameInput.value = profileName.textContent.trim();\n  jobInput.value = profileDescriptor.textContent.trim();\n  openPopup(formEdit);\n});\naddCardButton.addEventListener('click', function (e) {\n  e.preventDefault();\n  openPopup(formAdd);\n  console.log(formAdd);\n});\nprofileAvatar.addEventListener('click', function (e) {\n  e.preventDefault();\n  openPopup(formAvatar);\n});\nformAvatar.querySelector('.form__save-button').addEventListener('click', addAvatar);\nformAdd.querySelector('.form__save-button').addEventListener('click', addCardManually);\nformEditCloseButton.addEventListener('click', function () {\n  closePopup(formEdit);\n});\naddCardCloseButton.addEventListener('click', function () {\n  return closePopup(formAdd);\n});\ndocument.querySelectorAll('.form__close-icon').forEach(function (button) {\n  var buttonsPopup = button.closest('.popup');\n  button.addEventListener('click', function () {\n    return closePopup(buttonsPopup);\n  });\n});\nfunction handleFormSubmit(evt) {\n  evt.preventDefault();\n  setButtonText({\n    button: buttonEditSubmit,\n    text: 'Сохраняем...',\n    disabled: true\n  });\n  var name = nameInput.value;\n  var about = jobInput.value;\n  console.log({\n    name: name,\n    about: about\n  });\n  profileInfoLoad({\n    name: name,\n    about: about\n  }).then(function (data) {\n    profileName.textContent = data.name;\n    profileDescriptor.textContent = data.about;\n    console.log(data);\n  }).then(function () {\n    closePopup(formEdit);\n  }).catch(function (error) {\n    return console.log(error);\n  }).finally(function () {\n    setButtonText({\n      button: buttonEditSubmit,\n      text: 'Добавить',\n      disabled: false\n    });\n  });\n}\n;\nformEdit.addEventListener('submit', handleFormSubmit);\nenableValidation(configSelector);\npopupList.forEach(function (popup) {\n  popup.addEventListener('mousedown', function (evt) {\n    if (evt.target.classList.contains('popup')) {\n      closePopup(popup);\n    }\n  });\n});\ngetUserData().then(function (data) {\n  userId = data._id;\n  profileName.textContent = data.name;\n  profileDescriptor.textContent = data.about;\n  profileAvatar.src = data.avatar;\n  getAllCards().then(function (data) {\n    data.forEach(function (dataItem) {\n      return createCard(dataItem, userId);\n    });\n  });\n}).catch(function () {\n  return console.log('cant update profile info');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///734\n")}},__webpack_exports__={};__webpack_modules__[734]()})();