(()=>{"use strict";var __webpack_modules__={252:()=>{eval("\n;// CONCATENATED MODULE: ./src/components/api.js\nvar config = {\n  url: 'https://mesto.nomoreparties.co',\n  cohort: \"wbf-cohort-5\",\n  headers: {\n    'content-type': 'application/json',\n    'authorization': 'e428d967-ad54-4ed1-8f27-1e899a8fcfdd'\n  }\n};\nfunction dressResponse(res) {\n  return res.ok ? res.json() : Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n}\nfunction getUserData() {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/users/me\"), {\n    method: \"GET\",\n    headers: config.headers\n  }).then(dressResponse);\n}\nfunction getAllCards() {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/cards\"), {\n    method: \"GET\",\n    headers: config.headers\n  }).then(dressResponse);\n}\nfunction loadProfileInfo(body) {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/users/me\"), {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(dressResponse);\n}\nfunction loadNewCard(body) {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/cards\"), {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(dressResponse);\n}\nfunction editUserIcon(avatar) {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/users/me/avatar\"), {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatar\n    })\n  }).then(dressResponse);\n}\nfunction deleteCard(cardId) {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/cards/\").concat(cardId), {\n    method: \"DELETE\",\n    headers: config.headers\n  }).then(dressResponse);\n}\nfunction updateLike(cardId, liked) {\n  return fetch(\"\".concat(config.url, \"/v1/\").concat(config.cohort, \"/cards/likes/\").concat(cardId), {\n    method: liked ? \"DELETE\" : \"PUT\",\n    headers: config.headers\n  }).then(dressResponse);\n}\n\n;// CONCATENATED MODULE: ./src/components/consts.js\nvar profileName = document.querySelector('.profile__info_header');\nvar profileDescriptor = document.querySelector('.profile__info_description');\nvar profileAvatar = document.querySelector('.profile__avatar-image');\nvar profileAvatarOverlay = document.querySelector('.profile__avatar-overlay');\nvar formEdit = document.querySelector('#popup-edit');\nvar formAdd = document.querySelector('#popup-add');\nvar formAvatar = document.querySelector('#popup-avatar');\nvar formAddName = formAdd.querySelector('.form__profile_name');\nvar formAddMotto = formAdd.querySelector('.form__profile_motto');\nvar popupAny = document.querySelector('.popup');\nvar popupList = document.querySelectorAll('.popup');\nvar buttonEditSubmit = formEdit.querySelector('.form__save-button');\nvar buttonAddSubmit = formAdd.querySelector('.form__save-button');\nvar buttonAvatarSubmit = formAvatar.querySelector('.form__save-button');\nvar nameInput = formEdit.querySelector('.form__profile_name');\nvar jobInput = formEdit.querySelector('.form__profile_motto');\nvar placeInput = formAdd.querySelector('[name=\"place-name\"]');\nvar linkInput = formAdd.querySelector('.form-link');\nvar buttonProfileInfoEdit = document.querySelector('.profile__info_edit-button');\nvar formEditCloseButton = formEdit.querySelector('.form__close-icon');\nvar addCardButton = document.querySelector('.profile__add-button');\nvar addCardCloseButton = formAdd.querySelector('.form__close-icon');\nvar cardTemplate = document.querySelector('#card-template');\nvar cardsContainer = document.querySelector('.elements');\nvar allPage = document.querySelector('.page');\nvar cardPopup = document.querySelector('.popup__big-pic-template');\nvar newAvatarURL = formAvatar.querySelector('.form__profile_motto');\nvar configSelector = {\n  formSelector: '.form',\n  inputSelector: '.form__item',\n  submitButtonSelector: '.form__save-button',\n  inactiveButtonClass: 'form__button-blocked',\n  inputErrorClass: 'form__input-invalid'\n};\n\n;// CONCATENATED MODULE: ./src/components/modal.js\n\n\nfunction openPopup(modalElement) {\n  modalElement.classList.add('popup_opened');\n  document.addEventListener('keydown', closeByEsc);\n}\nfunction closePopup(modalElement) {\n  modalElement.classList.remove('popup_opened');\n  document.removeEventListener('keydown', closeByEsc);\n}\n;\nfunction closeByEsc(evt) {\n  if (evt.key === 'Escape') {\n    var openedPopup = document.querySelector('.popup_opened');\n    closePopup(openedPopup);\n  }\n}\n;\n\n;// CONCATENATED MODULE: ./src/components/util.js\n\nfunction setButtonText(_ref) {\n  var button = _ref.button,\n    text = _ref.text,\n    disabled = _ref.disabled;\n  if (disabled) {\n    button.disabled = false;\n  } else {\n    button.disabled = 'form__button-blocked';\n  }\n  button.textContent = text;\n}\n;\nfunction toggleLike(modalElement) {\n  modalElement.classList.toggle('element__rectangle_heart-on');\n}\n;\n\n;// CONCATENATED MODULE: ./src/components/validate.js\nfunction addError(inputElement, errorElement, config) {\n  inputElement.classList.add(config.inputErrorClass);\n  errorElement.textContent = inputElement.validationMessage;\n}\nfunction hideError(inputElement, errorElement, config) {\n  inputElement.classList.remove(config.inputErrorClass);\n  errorElement.textContent = '';\n}\nfunction validate_toggleButtonState(buttonElement, isActive, config) {\n  if (isActive) {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(config.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(config.inactiveButtonClass);\n  }\n}\nfunction checkInputValidity(inputElement, formElement, config) {\n  var isInputValid = inputElement.validity.valid;\n  var errorElement = formElement.querySelector(\"#\".concat(inputElement.name, \"-error\"));\n  if (!isInputValid) {\n    addError(inputElement, errorElement, config);\n  } else {\n    hideError(inputElement, errorElement, config);\n  }\n}\nfunction enableValidation(config) {\n  var forms = document.querySelectorAll(config.formSelector);\n  Array.from(forms).forEach(function (formElement) {\n    setEventListener(formElement, config);\n  });\n}\nfunction setEventListener(formElement, config) {\n  var inputList = formElement.querySelectorAll(config.inputSelector);\n  var submitButtonElement = formElement.querySelector(config.submitButtonSelector);\n  validate_toggleButtonState(submitButtonElement, formElement.checkValidity(), config);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      validate_toggleButtonState(submitButtonElement, formElement.checkValidity(), config);\n      checkInputValidity(inputElement, formElement, config);\n    });\n  });\n}\n\n;// CONCATENATED MODULE: ./src/components/card.js\n\n\n\n\nfunction createCard(object, userId) {\n  var clonedCard = cardTemplate.content.querySelector('.element__rectangle').cloneNode(true);\n  var pictureElement = clonedCard.querySelector('.element__image');\n  var likesCount = clonedCard.querySelector('.element__rectangle_like');\n  clonedCard.querySelector('.element__rectangle_text').textContent = object.name;\n  likesCount.textContent = object.likes.length;\n  pictureElement.src = object.link;\n  //cardsContainer.prepend(clonedCard);\n  var deleteBin = clonedCard.querySelector('.element__delete-button');\n  var likeHeart = clonedCard.querySelector('.element__rectangle_heart');\n  pictureElement.addEventListener('click', runImagePopup);\n  if (isLiked(object.likes, userId)) {\n    toggleLike(likeHeart);\n  }\n  if (object.owner._id !== userId) {\n    deleteBin.remove();\n  }\n  deleteBin.addEventListener('click', function () {\n    deleteCard(object._id).then(function () {\n      clonedCard.remove();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  });\n  likeHeart.addEventListener('click', handleClickLike);\n  function handleClickLike() {\n    updateLike(object._id, isLiked(object.likes, userId)).then(function (data) {\n      likeHeart.classList.toggle('element__rectangle_heart-on');\n      object.likes = data.likes;\n      likesCount.textContent = object.likes.length;\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }\n  ;\n  return clonedCard;\n}\n;\nfunction runImagePopup(e) {\n  openPopup(cardPopup);\n  var targetCard = e.target.closest('.element__rectangle');\n  var chosenImage = targetCard.querySelector('.element__image');\n  var chosenText = targetCard.querySelector('.element__rectangle_text');\n  cardPopup.querySelector('.popup__big-picture').src = chosenImage.src;\n  cardPopup.querySelector('.popup__big-popup-descriptor').textContent = chosenText.textContent;\n}\nfunction isLiked(likes, userID) {\n  return likes.some(function (user) {\n    return user._id === userID;\n  });\n}\n\n;// CONCATENATED MODULE: ./src/components/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\nvar userId = null;\nfunction renderCard(data, container) {\n  var newCard = createCard(data, userId);\n  container.prepend(newCard);\n}\nfunction addCardManually(e) {\n  e.preventDefault();\n  setButtonText({\n    button: buttonAddSubmit,\n    text: 'Сохраняем...',\n    disabled: true\n  });\n  var manualCard = {\n    name: formAddName.value,\n    link: formAddMotto.value\n  };\n  loadNewCard(manualCard).then(function (data) {\n    renderCard(data, cardsContainer);\n    closePopup(formAdd);\n    formAddName.value = \"\";\n    formAddMotto.value = \"\";\n  }).then(function () {\n    toggleButtonState(buttonAddSubmit, false, configSelector);\n  }).catch(function (error) {\n    console.log(\"Cant load card \".concat(error));\n  }).finally(function () {\n    setButtonText({\n      button: buttonAddSubmit,\n      text: 'Добавить',\n      disabled: false\n    });\n  });\n}\n;\nfunction addAvatar(e) {\n  e.preventDefault();\n  setButtonText({\n    button: buttonAvatarSubmit,\n    text: 'Сохраняем...',\n    disabled: true\n  });\n  editUserIcon(newAvatarURL.value).then(function (data) {\n    profileAvatar.src = data.avatar;\n    closePopup(formAvatar);\n    newAvatarURL.value = \"\";\n  }).then(function () {\n    toggleButtonState(buttonAvatarSubmit, false, configSelector);\n  }).catch(function (error) {\n    return console.log(error);\n  }).finally(function () {\n    setButtonText({\n      button: buttonAvatarSubmit,\n      text: 'Добавить',\n      disabled: true\n    });\n  });\n}\nbuttonProfileInfoEdit.addEventListener('click', function () {\n  nameInput.value = profileName.textContent.trim();\n  jobInput.value = profileDescriptor.textContent.trim();\n  openPopup(formEdit);\n});\naddCardButton.addEventListener('click', function (e) {\n  openPopup(formAdd);\n});\nprofileAvatarOverlay.addEventListener('click', function (e) {\n  openPopup(formAvatar);\n});\nformAvatar.addEventListener('submit', addAvatar);\nformAdd.addEventListener('submit', addCardManually);\naddCardCloseButton.addEventListener('click', function () {\n  return closePopup(formAdd);\n});\ndocument.querySelectorAll('.form__close-icon').forEach(function (button) {\n  var buttonsPopup = button.closest('.popup');\n  button.addEventListener('click', function () {\n    return closePopup(buttonsPopup);\n  });\n});\nfunction handleEditFormSubmit(evt) {\n  evt.preventDefault();\n  setButtonText({\n    button: buttonEditSubmit,\n    text: 'Сохраняем...',\n    disabled: true\n  });\n  var name = nameInput.value;\n  var about = jobInput.value;\n  loadProfileInfo({\n    name: name,\n    about: about\n  }).then(function (data) {\n    profileName.textContent = data.name;\n    profileDescriptor.textContent = data.about;\n  }).then(function () {\n    closePopup(formEdit);\n  }).catch(function (error) {\n    return console.log(error);\n  }).finally(function () {\n    setButtonText({\n      button: buttonEditSubmit,\n      text: 'Добавить',\n      disabled: false\n    });\n  });\n}\n;\nformEdit.addEventListener('submit', handleEditFormSubmit);\nenableValidation(configSelector);\npopupList.forEach(function (popup) {\n  popup.addEventListener('mousedown', function (evt) {\n    if (evt.target.classList.contains('popup')) {\n      closePopup(popup);\n    }\n  });\n});\nPromise.all([getUserData(), getAllCards()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    user = _ref2[0],\n    cards = _ref2[1];\n  userId = user._id;\n  profileName.textContent = user.name;\n  profileDescriptor.textContent = user.about;\n  profileAvatar.src = user.avatar;\n  cards.forEach(function (card) {\n    return renderCard(card, cardsContainer);\n  });\n}).catch(function () {\n  return console.log('cant update profile info');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///252\n")}},__webpack_exports__={};__webpack_modules__[252]()})();